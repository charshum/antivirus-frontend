{"version":3,"sources":["assets/images/banner-thin.png","components/main/banner/banner.js","components/organizations/OrganizationCard/KeyValueRow/index.js","components/organizations/OrganizationCard/ContactIcon/index.js","components/organizations/OrganizationCard/index.js","components/organizations/index.js","components/main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","className","src","banner","useStyles","makeStyles","row","display","label","flexGrow","width","fontSize","value","KeyValueRow","props","keyName","classes","Typography","color","gutterBottom","iconCircle","cursor","height","borderRadius","backgroundColor","icon","marginTop","marginLeft","ContactIconTypes","type","faFacebook","faLink","faEnvelope","faPhone","ContactIcon","name","link","typeData","find","hrefLink","href","root","maxWidth","minHeight","marginRight","bullet","margin","transform","title","pos","marginBottom","displayFields","key","linkFields","OrganizationCard","org","Card","CardContent","map","f","CardActions","minWidth","Organization","data","Grid","container","justify","spacing","item","xs","sm","md","TabContent","children","index","tabContent","hidden","theme","createStyles","menuButton","appBar","tabs","tab","Main","orgData","React","useState","setValue","AppBar","position","Tabs","indicatorColor","onChange","event","newValue","centered","aria-label","Tab","App","setOrgData","useEffect","axios","get","auth","username","password","then","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.adf7fecf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-thin.07e51e0d.png\";","import React from 'react';\nimport style from './style.css'\nimport banner from '../../../assets/images/banner-thin.png'\n\nfunction Banner(){\n    return(\n        <div className=\"banner\">\n            <img className=\"banner-image\" src={banner}/>\n        </div>\n    )\n}\n\n\nexport default Banner;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    row:{\n        display: 'flex'\n    },\n    label:{\n        flexGrow: 1,\n        width: '20%',\n        fontSize: 14\n\n    },\n    value:{\n        flexGrow: 1,\n        width: '80%',\n        fontSize: 14\n    }\n\n});\n\n\nfunction KeyValueRow(props){\n    const {keyName, value} = props;\n    const classes = useStyles();\n    return (\n        <div className={classes.row}>\n            <Typography className={classes.label} color=\"textSecondary\" gutterBottom>\n                {keyName}\n            </Typography>\n            <Typography className={classes.value} color=\"textSecondary\" gutterBottom>\n                {value}\n            </Typography>\n        </div>\n    )\n}\n\nexport default KeyValueRow;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport { faPhone } from '@fortawesome/free-solid-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\nconst useStyles = makeStyles({\n    iconCircle:{\n        cursor: 'pointer',\n        width: 30,\n        height: 30,\n        borderRadius: 15,\n        backgroundColor: '#33b5a6'\n    },\n    icon:{\n        color: '#ffffff',\n        marginTop: 7,\n        marginLeft: 7\n        \n    }\n});\n\nexport var ContactIconTypes = [\n    {\n        type: \"facebook\",\n        icon: faFacebook\n    },{\n        type: \"link\",\n        icon: faLink\n    },{\n        type: \"email\",\n        icon: faEnvelope\n    },{\n        type: \"phone\",\n        icon: faPhone\n    }\n]\n\nconst getType = (name) => {\n    return ContactIconTypes.find(type => type.type == name);\n}\n\nfunction ContactIcon(props){\n    const {link, type} = props;\n    const classes = useStyles();\n    const typeData = getType(type);\n    let hrefLink = link;\n    if(!typeData){\n        return (\"\");\n    }\n    if(typeData.type == 'email'){\n        hrefLink = 'mailto:'+link;\n    }\n    if(typeData.type == 'phone'){\n        hrefLink = 'tel:'+link\n    }\n    return (\n        <div className={classes.iconCircle}>\n            <a href={hrefLink}>\n                <FontAwesomeIcon className={classes.icon} icon={typeData.icon}/>\n            </a>\n        </div>\n    )\n}\n\nexport default ContactIcon;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport KeyValueRow from './KeyValueRow';\nimport ContactIcon from './ContactIcon';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 400,\n      minHeight: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\nconst displayFields = [\n    {\n        key: 'orgType',\n        title: '組織類型'\n    },\n    {\n        key: 'district',\n        title: '地區'\n    },\n    {\n        key: 'address',\n        title: '地址'\n    },\n    {\n        key: 'contactPersonName',\n        title: '聯絡人'\n    }\n]\n\nconst linkFields = [\n    {\n        key: 'facebook',\n        type: 'facebook'\n    },{\n        key: 'email',\n        type: 'email'\n    },{\n        key: 'website',\n        type: 'link'\n    },{\n        key: 'phone',\n        type: 'phone'\n    }\n]\n\nfunction OrganizationCard(props){\n    const classes = useStyles();\n\n    const { org } = props;\n    return(\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {org.name}\n                </Typography>\n                {displayFields.map(f => {\n                    return (\n                        <KeyValueRow keyName={f.title} value={org[f.key]}/>\n                    )\n                })}\n            </CardContent>\n            <CardActions>\n                {\n                    linkFields.map(link => {\n                        if(org[link.key] != ''){\n                            return (\n                                <ContactIcon link={org[link.key]} type={link.type}/>\n                            )\n                        }else{\n                            return (\"\")\n                        }\n                    })\n                }\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default OrganizationCard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OrganizationCard from './OrganizationCard';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: '100%',\n    marginTop: '20px'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\nfunction Organization(props){\n    const { data } = props;\n    const classes = useStyles();\n    return(\n        <Grid className={classes.root} container justify=\"center\" spacing={2}>\n            {data.map(org => {\n             return(\n                <Grid item xs={12} sm={6} md={4}>\n                    <OrganizationCard org={org}/>\n                </Grid>\n                \n             )   \n            })}\n        </Grid>\n    )\n}\n\n\nexport default Organization","import React, { Children } from 'react';\nimport style from './style.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Banner from './banner/banner';\nimport Organization from '../organizations';\n\n\nfunction TabContent(props){\n    const { children, value, index } = props;\n    const classes = useStyles();\n    return(\n        <div\n            className={classes.tabContent}\n            hidden={value !== index}\n        >\n            {children}\n        </div>\n    )\n}\n\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        appBar: {\n            backgroundColor: '#008678'\n        },\n        tabs:{\n            display: 'flex'\n        },\n        tab:{\n            flexGrow: 1\n        },\n        tabContent:{\n            backgroundColor: '#6fe9d8'\n        }\n    }),\n);\n\n\nfunction Main(props){\n    const { orgData } = props\n    const [value, setValue] = React.useState(1);\n    const classes = useStyles();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <Banner />\n            <AppBar className={classes.appBar} position=\"static\">\n                <Tabs indicatorColor=\"primary\" value={value} onChange={handleChange} centered={true} className={classes.tabs} aria-label=\"simple tabs example\">\n                    <Tab className={classes.tab} label=\"活動\" />\n                    <Tab className={classes.tab} label=\"組織\" />\n                </Tabs>\n            </AppBar>\n            <TabContent index={0} value={value}>\n                Activity\n            </TabContent>\n            <TabContent index={1} value={value}>\n                <Organization data={orgData}/>\n            </TabContent>\n\n        </div>\n\n        \n    )\n    \n}\n\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Main from './components/main';\nimport axios from 'axios'\n\nfunction App() {\n\n  const [orgData, setOrgData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://go-api-dot-antivirus-center.appspot.com/getOrg\",\n        {\n          auth: {\n            username: 'admin',\n            password: 'admin'\n          }\n        }\n      )\n      .then(({ data }) => {\n        setOrgData(data);\n      });\n  }, []);\n\n  return (\n    <Main orgData={orgData}/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}